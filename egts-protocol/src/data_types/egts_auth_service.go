package egts_protocol_data_types

type EGTS_SR_RECORD_RESPONSE struct {
	// Подзапись применяется для осуществления подтверждения процесса
	// обработки записи Протокола Уровня Поддержки Услуг.
	// Данный тип подзаписи должен поддерживаться всеми Сервисами.
	CRN int
	RST byte
	*ServiceDataSubrecord
}

type EGTS_SR_TERM_IDENTITY struct {
	// Подзапись используется АТ при запросе авторизации на ТП и содержит
	// учётные данные АТ

	// Terminal Identifier, уникальный идентификатор, назначаемый при
	// программировании АТ. Наличие значения 0 в данном поле означает, что
	// АТ не прошел процедуру конфигурирования, или прошел её не полностью.
	// Данный идентификатор назначается оператором и однозначно определяет
	// набор учетных данных АТ. TID назначается при инсталляции АТ как
	// дополнительного оборудования и передаче оператору учетных данных
	// АТ (IMSI, IMEI, serial_id). В случае использования АТ в качестве штатного
	// устройства, TID сообщается оператору автопроизводителем вместе с учетными
	// данными (VIN, IMSI, IMEI).
	TID int

	// битовый флаг, который определяет наличие поля HDID в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	HDIDE uint8

	// битовый флаг, который определяет наличие поля IMEI в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	IMEIE uint8

	// битовый флаг, который определяет наличие поля IMSI в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	IMSIE uint8

	// битовый флаг, который определяет наличие поля LNGC в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	LNGCE uint8

	// битовый флаг предназначен для определения алгоритма использования Сервисов
	// (если бит равен 1, то используется «простой» алгоритм, если 0, то
	// алгоритм «запросов» на использование сервисов)
	SSRA uint8

	// битовый флаг определяет наличие поля NID в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	NIDE uint8

	// битовый флаг, определяющий наличие поля BS в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	BSE uint8

	// битовый флаг, определяющий наличие поля MSISDN в подзаписи
	// (если бит равен 1, то поле передаётся, если 0, то не передаётся)
	MNE uint8

	// идентификатор «домашней» ТП (подробная учётная информация о терминале
	// хранится на данной ТП)
	HDID int

	// идентификатор мобильного устройства (модема). При невозможности определения
	// данного параметра, АТ должен заполнять данное поле значением 0 во всех 15-ти символах
	IMEI string

	// идентификатор мобильного абонента. При невозможности определения данного
	// параметра, устройство должно заполнять данное поле значением 0 во всех 16-ти символах
	IMSI string

	// код языка, предпочтительного к использованию на стороне АТ, по ISO 639-2,
	// например, “rus” русский
	LNGC string

	// идентификатор сети оператора, в которой зарегистрирован АТ на данный
	// момент. Используются 20 младших бит. Представляет пару кодов MCC-MNC
	// (на основе рекомендаций ITU-T E.212).
	NID uint8

	// максимальный размер буфера приёма АТ в байтах. Размер каждого пакета
	// информации, передаваемого на АТ, не должен превышать данного значения.
	// Значение поля BS может принимать различные значения,
	// например 800, 1000, 1024, 2048, 4096 и т.д., и зависит от реализации
	// аппаратной и программной частей конкретного АТ
	BS int

	// телефонный номер мобильного абонента. При невозможности определения
	// данного параметра, устройство должно заполнять данное поле значением
	// 0 во всех 15- ти символах
	MSISDN string
}

type EGTS_SR_MODULE_DATA struct {
	// Подзапись предназначена для передачи на ТП информации об инфраструктуре
	// на стороне АТ, о составе, состоянии и параметрах блоков и модулей АТ.
	// Данная подзапись является опциональной, и разработчик АТ сам принимает
	// решение о необходимости заполнения полей и отправки данной подзаписи.
	// Одна подзапись описывает один модуль. В одной записи может передаваться
	// последовательно несколько таких подзаписей, что позволяет передать данные
	// об отдельных составляющих всей аппаратной части АТ и периферийного оборудования

	// тип модуля, определяет функциональную принадлежность модуля
	// (1 – основной модуль; 2 – модуль ввода вывода; 3 – модуль навигационного приёмника;
	// 4 – модуль беспроводной связи). Здесь указаны рекомендованные правила нумерации типов модулей.
	// Конкретная реализация Сервиса авторизации может вводить и расширять собственную
	// нумерацию типов, включая все внешние периферийные контроллеры
	MT byte

	// код производителя
	VID uint

	// версия аппаратной части модуля
	// (старший байт – число до точки – major version, младший – после точки – minor version,
	// например версия 2.34 будет представлена числом 0x0222)
	FWV uint8

	// версия программной части модуля
	// (старший байт – число до точки, младший – после точки)
	SWV uint8

	// код модификации программной части модуля
	MD byte

	// состояние
	// (1 - включен, 0- выключен, >127 – неисправность см.Коды результатов обработки)
	ST byte

	// серийный номер модуля
	SRN string

	// разделитель строковых параметров (всегда имеет значение 0);
	D byte

	// краткое описание модуля.
	DSCR string
}

type EGTS_SR_VEHICLE_DATA struct {
	// Подзапись применяется АТ для передачи на ТП информации о транспортном средстве.

	// идентификационный номер транспортного средства (структура описана в ISO 3779)
	VIN string

	// тип транспортного средства
	// Bit 31-4 не используется
	// Bit 3-0:
	// 0001 пассажирский (Class M1)
	// 0010 автобус (Class M2)
	// 0011 автобус (Class M3)
	// 0100 легкая грузовая машина (Class N1)
	// 0101 тяжелая грузовая машина (Class N2)
	// 0110 тяжелая грузовая машина (Class N3)
	// 0111 мотоцикл (Class L1e)
	// 1000 мотоцикл (Class L2e)
	// 1001 мотоцикл (Class L3e)
	// 1010 мотоцикл (Class L4e)
	// 1011 мотоцикл (Class L5e)
	// 1100 мотоцикл (Class L6e)
	// 1101 мотоцикл (Class L7e)
	VHT uint

	// тип энергоносителя транспортного средства
	// Если все биты 0, то тип не задан
	// Bit 31 - 6: не используется
	// Bit 5: 1 = водород
	// Bit 4: 1 = электричество (более 42 v and 100 Ah) Bit 3: 1 = жидкий пропан (LPG)
	// Bit 2: 1 = сжиженный природный газ (CNG) Bit 1: 1 = дизель
	// Bit 0: 1 = бензин
	VPST uint
}

type EGTS_SR_AUTH_PARAMS struct {
	// Подзапись используется ТП для передачи на АТ данных о способе и
	// параметрах шифрования, требуемого для дальнейшего взаимодействия

	// битовый флаг, определяет наличие поля EXP и следующего за ним
	// разделителя D (если 1, то поля присутствуют);
	EXE uint8

	// битовый флаг, определяет наличие поля SS и следующего за ним
	// разделителя D (если 1, то поля присутствуют);
	SSE uint8

	// битовый флаг, определяет наличие поля MSZ (если 1, то поле присутствует);
	MSE uint8

	// битовый флаг, определяет наличие поля ISL (если 1, то поле присутствует);
	ISLE uint8

	// битовый флаг, определяет наличие полей PKL и PBK (если 1, то поля присутствуют);
	PKE uint8

	// битовое поле, определяющее требуемый алгоритм шифрования пакетов.
	// Если данное поле содержит значение 0 0, то шифрование не применяется,
	// и подзапись EGTS_SR_AUTH_PARAMS содержит только один байт, иначе,
	// в зависимости от типа алгоритма, наличие дополнительных параметров
	// определяется остальными битами поля FLG
	ENA uint8

	// длина публичного ключа в байтах
	PKL int

	// данные публичного ключа
	PBK int8

	// результирующая длина идентификационных данных
	ISL int

	// параметр, применяемый в процессе шифрования
	MSZ int

	// специальная серверная последовательность байт, применяемая в процессе шифрования
	SS string

	// разделитель строковых параметров (всегда имеет значение 0)
	D byte

	// специальная последовательность, используемая в процессе шифрования.
	EXP string
}

type EGTS_SR_AUTH_INFO struct {
	// Подзапись предназначена для передачи на ТП аутентификационных данных АТ
	// с использованием ранее переданных со стороны ТП параметров
	// для осуществления шифрования данных.

	// имя пользователя
	UNM string

	// разделитель строковых параметров (всегда имеет значение 0)
	D byte

	// пароль пользователя
	UPSW string

	// специальная серверная последовательность байт, передаваемая в подзаписи
	// EGTS_SR_AUTH_PARAMS (необязательное поле, наличие зависит от
	// используемого алгоритма шифрования).
	SS string
}

type EGTS_SR_SERVICE_INFO struct {
	// Данный тип подзаписи используется для информирования принимающей
	// стороны, АТ или ТП, в зависимости от направления отправки,
	// о поддерживаемых Сервисах, а также для запроса определённого
	// набора требуемых Сервисов (от АТ к ТП)

	// тип сервиса, определяет функциональную принадлежность
	// (например, EGTS_TELEDATA_SERVICE, EGTS_ECALL_SERVICE и т.д.)
	ST uint8
	// определяет текущее состояние сервиса
	SST uint8
	// определяет параметры сервиса
	SRVP uint8
	// (Service Attribute) битовый флаг, атрибут сервиса
	// 0 = поддерживаемый сервис
	// 1 = запрашиваемый сервис
	SRVA uint8
	// (Service Routing Priority) битовое поле, приоритет с точки зрения
	// трансляции на него данных (в случае масштабирования системы и
	// применения нескольких экземпляров приложений одного типа сервиса) определяется битами 0 и 1
	// 00 =наивысший; 01 = высокий; 10 = средний; 11 = низкий;
	SRVRP uint8
}

type EGTS_SR_RESULT_CODE struct {
	// Подзапись применяется ТП для информирования АТ
	// о результатах процедуры аутентификации АТ.
	// код, определяющий результат выполнения операции авторизации
	RCD byte
}

type EGTS_AUTH_SERVICE struct {
	// Данный тип Сервиса применяется для осуществления процедуры идентификации
	// и аутентификации АТ на стороне ТП, а также, получения учётных данных АТ и
	// информации об инфраструктуре на стороне АТ (состав и версии ПО модулей, блоков,
	// периферийного оборудования, информации о транспортном средстве).
	// Сервис должен использоваться АТ только в случае использования
	// в качестве транспорта протокола TCP/IP после создания каждого
	// нового соединения с ТП.

	EGTS_SR_RECORD_RESPONSE []EGTS_SR_RECORD_RESPONSE

	EGTS_SR_TERM_IDENTITY []EGTS_SR_TERM_IDENTITY

	EGTS_SR_MODULE_DATA []EGTS_SR_MODULE_DATA

	EGTS_SR_VEHICLE_DATA []EGTS_SR_VEHICLE_DATA

	EGTS_SR_AUTH_PARAMS []EGTS_SR_AUTH_PARAMS
	EGTS_SR_AUTH_INFO   []EGTS_SR_AUTH_INFO

	EGTS_SR_SERVICE_INFO []EGTS_SR_SERVICE_INFO

	EGTS_SR_RESULT_CODE []EGTS_SR_RESULT_CODE
}
