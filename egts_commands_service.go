package main

type EGTS_SR_COMMAND_DATA struct {
	// Подзапись используется АТ и ТП для передачи команд, информационных
	// сообщений, подтверждений доставки, подтверждений выполнения команд,
	// подтверждения прочтения сообщений и т.п.

	// тип команды
	// 0001 = CT_COMCONF - подтверждение о приёме, обработке или результат выполнения команды
	// 0010 = CT_MSGCONF - подтверждение о приёме, отображении и/или обработке информационного сообщения
	// 0011 = CT_MSGFROM - информационное сообщение от АТ
	// 0100 = CT_MSGTO - информационное сообщение для вывода на устройство отображения АТ
	// 0101 = CT_COM - команда для выполнения на АТ
	// 0110 = CT_DELCOM - удаление из очереди на выполнение переданной ранее команды
	// 0111 = CT_SUBREQ - дополнительный подзапрос для выполнения (к переданной ранее команде)
	// 1000 = CT_DELIV - подтверждение о доставке команды или информационного сообщения
	CT byte

	// тип подтверждения (имеет смысл для типов команд CT_COMCONF, CT_MSGCONF, CT_DELIV)
	// 0000 = CC_OK
	// 0001 = CC_ERROR
	// 0010 = CC_ILL
	// списке разрешённых (определённых протоколом) команд или отсутствия разрешения на выполнение данной команды
	// 0011 = CC_DEL - команда успешно удалена
	// - успешное выполнение, положительный ответ;
	// - обработка завершилась ошибкой
	// - команда не может быть выполнена по причине отсутствия в
	// 0100 = CC_NFOUND
	// 0101 = CC_NCONF
	// 0110 = CC_INPROG
	// требуется длительное время (результат выполнения ещё не известен)
	// - команда для удаления не найдена
	// - успешное выполнение, отрицательный ответ
	// - команда передана на обработку, но для её выполнения
	CCT byte

	// идентификатор команды, сообщения. Значение из данного поля должно быть
	// использовано стороной, обрабатывающей/выполняющей команду или сообщение,
	// для создания подтверждения. Подтверждение должно содержать в поле CID
	// то же значение, что содержалось в самой команде или сообщении при отправке.
	CID uint

	// идентификатор отправителя (уровня прикладного ПО, например, уникальный
	// идентификатор пользователя в системе диспетчеризации) данной команды или подтверждения
	SID uint

	// (Authorization Code Field Exists) битовый флаг, определяющий наличие полей ACL и AC в подзаписи
	// 1 = поля ACL и AC присутствуют в подзаписи
	// 0 = поля ACL и AC отсутствуют в подзаписи
	ACFE byte

	// (Charset Field Exists) битовый флаг, определяющий наличие поля CHS в подзаписи
	// 1 = поле CHS присутствует в подзаписи
	// 0 = поле CHS отсутствует в подзаписи
	CHSFE byte

	// кодировка символов, используемая в поле CD, содержащем тело команды.
	// При отсутствии данного поля по умолчанию должна использоваться кодировка
	// CP- 1251. Определены следующие значения поля CHS (десятичный вид):
	// 0 = CP-1251
	// 1 = IA5 (CCITT T.50)/ASCII (ANSI X3.4) 2 = бинарные данные
	// 3 = Latin 1 (ISO-8859-1)
	// 4 = бинарные данные
	// 5 = JIS (X 0208-1990)
	// 6 = Cyrllic (ISO-8859-5)
	// 7 = Latin/Hebrew (ISO-8859-8)
	// 8 = UCS2 (ISO/IEC-10646)
	CHS byte

	// длина в байтах поля AC, содержащего код авторизации на стороне получателя.
	ACL byte

	// код авторизации, использующийся на принимающей стороне (АТ), и
	// который обеспечивает ограничение доступа на выполнение отдельных
	// команд. Если указанный в данном поле код не совпадает с ожидаемым
	// значением, то в ответ на такую команду или сообщение АТ должен
	// отправить подтверждение с типом CC_ILL.
	AC string

	// тело команды, параметры, данные возвращаемые на команду-запрос,
	// использующие кодировку из поля CHS, или значение по умолчанию.
	// Размер данного поля определяется, исходя из общей длины записи
	// Протокола Уровня Поддержки Услуг, и длины предшествующих полей в
	// данной подзаписи. Формат команды описан в Таблице 18. Список команд,
	// их формат и описание представлены в п.6.4.2. Данное поле может иметь
	// нулевую длину (отсутствовать) в тех случаях, когда в ответ на команду
	// или сообщение для АТ не передаются никакие данные.
	CD string
}

type EGTS_COMMANDS_SERVICE struct {
	// Данный тип сервиса предназначен для обработки команд, сообщений и
	// подтверждений, передаваемых между АТ, ТП и клиентскими приложениями.

	EGTS_SR_RECORD_RESPONSE []EGTS_SR_RECORD_RESPONSE
	EGTS_SR_COMMAND_DATA    []EGTS_SR_COMMAND_DATA
}
